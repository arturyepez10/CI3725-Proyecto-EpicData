.print Arreglo pesado de generar, tarda unos segundos
[num] a := 'array(1000000, '2 * uniform() - 1')';
num ti := 0;

.print Cálculo computacionalmente pesado:
# avg(a)

.print Arreglo de dos elementos con ese cálculo pesado
[num] b := ['avg(a)*avg(a)*avg(a)*avg(a)', 'avg(a)*avg(a)*avg(a)*avg(a)'];

.print Se evalúa primero para que se memoice a y no se tome el tiempo que este en sí mismo tarda generándose
avg(a)

.print Se evalúa solo el primer elemento (no dura demasiado)
b[0]

.print Se evalúa solo el segundo (tampoco)
b[1]

.print Se vuelven a evaluar (ya están memoizados, inmediato)
b[0]
b[0]
b[0]
b[1]
b[1]
b[1]
b
b
b

.print Se avanza el ciclo de cómputo
tick()

.print Análogo a arriba, se evalúa primero
avg(a)

.print Se evalúa b entero nuevamente, debe durar el doble
b

.print Se vuelven a evaluar (ya están memoizados, inmediato)
b[0]
b[0]
b[0]
b[1]
b[1]
b[1]
b
b
b