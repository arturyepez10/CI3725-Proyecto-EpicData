# --- NUMBER ---

# Definicion de arreglo
[num] arr := [5, 6, 6];

# Asignación a elemento
arr[0] := 6;

# Como variable
arr
arr[0]

# --- BOOL ---

# Definicion de arreglo
[bool] arr_b := [true && false, false, true || false];

# Asignación a elemento
arr_b[0] := true;

# Como variable
arr_b
arr_b[0]

# Acceder a arreglo mal
arr_b[0.5]
arr_b[10]

# DEFINIR VARIABLES Y METERLAS EN ARREGLO
num x := 5/2;
num y := 1 + 1/2 + 1/6 + 1/24 + 1/120 + 1/720 + 1/5040 + 1/40320 + 1/362880 + 1/3628800;
num z := 2^7;
num w := 5%2;

arr_b := [x, y, w, x && w];
arr := [x, y, z, w, w + 5, y^w];

# CASO DE PRUEBA INTERESANTE
x := .0;

# Evalua x <> 0, da false
# Por lo que evalua x=0, da true
# Por lo que el resultado es false
# Como da false, devuelve 1
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);

# Ahora x es 1, como x <> da true, resulta true
# Como resulta true, evalua (x-1)/x y da 0
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);

x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);
x := if(if(x <> 0, true, if(x = 0, false, true)), (x-1)/x, 1.0);